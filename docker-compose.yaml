version: '3.8'

services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["web"]
    expose:
      - 8000
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:15.1-alpine
    ports:
      - '5432:5432'
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 5

  redis:
    image: redis:latest
    expose:
      - 6379
    ports:
      - "6379:6379"
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:latest
    hostname: rabbitmq
    env_file:
      - .env
    ports:
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 5

  celery:
      build:
        context: .
        dockerfile: Dockerfile
      env_file:
        - .env
      command: ["celery", "--app=src.tasks.task:celery", "worker", "-B", "-l", "INFO"]
      depends_on:
        - web
